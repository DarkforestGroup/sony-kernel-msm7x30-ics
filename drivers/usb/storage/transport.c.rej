--- drivers/usb/storage/transport.c
+++ drivers/usb/storage/transport.c
@@ -692,9 +691,6 @@
 		int temp_result;
 		struct scsi_eh_save ses;
 		int sense_size = US_SENSE_SIZE;
-		struct scsi_sense_hdr sshdr;
-		const u8 *scdd;
-		u8 fm_ili;
 
 		/* device supports and needs bigger sense buffer */
 		if (us->fflags & US_FL_SANE_SENSE)
@@ -770,30 +758,32 @@
 			srb->sense_buffer[7] = (US_SENSE_SIZE - 8);
 		}
 
-		scsi_normalize_sense(srb->sense_buffer, SCSI_SENSE_BUFFERSIZE,
-				     &sshdr);
-
 		US_DEBUGP("-- Result from auto-sense is %d\n", temp_result);
 		US_DEBUGP("-- code: 0x%x, key: 0x%x, ASC: 0x%x, ASCQ: 0x%x\n",
-			  sshdr.response_code, sshdr.sense_key,
-			  sshdr.asc, sshdr.ascq);
+			  srb->sense_buffer[0],
+			  srb->sense_buffer[2] & 0xf,
+			  srb->sense_buffer[12], 
+			  srb->sense_buffer[13]);
 #ifdef CONFIG_USB_STORAGE_DEBUG
-		usb_stor_show_sense(sshdr.sense_key, sshdr.asc, sshdr.ascq);
+		usb_stor_show_sense(
+			  srb->sense_buffer[2] & 0xf,
+			  srb->sense_buffer[12], 
+			  srb->sense_buffer[13]);
 #endif
 
 		/* set the result so the higher layers expect this data */
 		srb->result = SAM_STAT_CHECK_CONDITION;
 
-		scdd = scsi_sense_desc_find(srb->sense_buffer,
-					    SCSI_SENSE_BUFFERSIZE, 4);
-		fm_ili = (scdd ? scdd[3] : srb->sense_buffer[2]) & 0xA0;
-
 		/* We often get empty sense data.  This could indicate that
 		 * everything worked or that there was an unspecified
 		 * problem.  We have to decide which.
 		 */
-		if (sshdr.sense_key == 0 && sshdr.asc == 0 && sshdr.ascq == 0 &&
-		    fm_ili == 0) {
+		if (	/* Filemark 0, ignore EOM, ILI 0, no sense */
+				(srb->sense_buffer[2] & 0xaf) == 0 &&
+			/* No ASC or ASCQ */
+				srb->sense_buffer[12] == 0 &&
+				srb->sense_buffer[13] == 0) {
+
 			/* If things are really okay, then let's show that.
 			 * Zero out the sense buffer so the higher layers
 			 * won't realize we did an unsolicited auto-sense.
@@ -808,10 +798,7 @@
 			 */
 			} else {
 				srb->result = DID_ERROR << 16;
-				if ((sshdr.response_code & 0x72) == 0x72)
-					srb->sense_buffer[1] = HARDWARE_ERROR;
-				else
-					srb->sense_buffer[2] = HARDWARE_ERROR;
+				srb->sense_buffer[2] = HARDWARE_ERROR;
 			}
 		}
 	}
