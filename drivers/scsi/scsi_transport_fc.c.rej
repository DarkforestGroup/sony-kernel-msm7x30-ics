--- drivers/scsi/scsi_transport_fc.c
+++ drivers/scsi/scsi_transport_fc.c
@@ -1204,15 +1193,6 @@
 {
 	struct fc_vport *vport = transport_class_to_vport(dev);
 	struct Scsi_Host *shost = vport_to_shost(vport);
-	unsigned long flags;
-
-	spin_lock_irqsave(shost->host_lock, flags);
-	if (vport->flags & (FC_VPORT_DEL | FC_VPORT_CREATING)) {
-		spin_unlock_irqrestore(shost->host_lock, flags);
-		return -EBUSY;
-	}
-	vport->flags |= FC_VPORT_DELETING;
-	spin_unlock_irqrestore(shost->host_lock, flags);
 
 	fc_queue_work(shost, &vport->vport_delete_work);
 	return count;
@@ -1802,9 +1782,6 @@
 	list_for_each_entry(vport, &fc_host->vports, peers) {
 		if ((vport->channel == 0) &&
 		    (vport->port_name == wwpn) && (vport->node_name == wwnn)) {
-			if (vport->flags & (FC_VPORT_DEL | FC_VPORT_CREATING))
-				break;
-			vport->flags |= FC_VPORT_DELETING;
 			match = 1;
 			break;
 		}
@@ -3781,9 +3754,8 @@
 		return;
 
 	while (!blk_queue_plugged(q)) {
-		if (rport && (rport->port_state == FC_PORTSTATE_BLOCKED) &&
-		    !(rport->flags & FC_RPORT_FAST_FAIL_TIMEDOUT))
-			break;
+		if (rport && (rport->port_state == FC_PORTSTATE_BLOCKED))
+				break;
 
 		req = blk_fetch_request(q);
 		if (!req)
