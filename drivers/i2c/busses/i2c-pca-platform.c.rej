--- drivers/i2c/busses/i2c-pca-platform.c
+++ drivers/i2c/busses/i2c-pca-platform.c
@@ -80,23 +80,20 @@
 static int i2c_pca_pf_waitforcompletion(void *pd)
 {
 	struct i2c_pca_pf_data *i2c = pd;
+	long ret = ~0;
 	unsigned long timeout;
-	long ret;
 
 	if (i2c->irq) {
-		ret = wait_event_timeout(i2c->wait,
+		ret = wait_event_interruptible_timeout(i2c->wait,
 			i2c->algo_data.read_byte(i2c, I2C_PCA_CON)
 			& I2C_PCA_CON_SI, i2c->adap.timeout);
 	} else {
 		/* Do polling */
 		timeout = jiffies + i2c->adap.timeout;
-		do {
-			ret = time_before(jiffies, timeout);
-			if (i2c->algo_data.read_byte(i2c, I2C_PCA_CON)
-					& I2C_PCA_CON_SI)
-				break;
+		while (((i2c->algo_data.read_byte(i2c, I2C_PCA_CON)
+				& I2C_PCA_CON_SI) == 0)
+				&& (ret = time_before(jiffies, timeout)))
 			udelay(100);
-		} while (ret);
 	}
 
 	return ret > 0;
