--- drivers/hwmon/coretemp.c
+++ drivers/hwmon/coretemp.c
@@ -52,7 +51,6 @@
 	struct mutex update_lock;
 	const char *name;
 	u32 id;
-	u16 core_id;
 	char valid;		/* zero until following fields are valid */
 	unsigned long last_updated;	/* in jiffies */
 	int temp;
@@ -75,7 +73,7 @@
 	if (attr->index == SHOW_NAME)
 		ret = sprintf(buf, "%s\n", data->name);
 	else	/* show label */
-		ret = sprintf(buf, "Core %d\n", data->core_id);
+		ret = sprintf(buf, "Core %d\n", data->id);
 	return ret;
 }
 
@@ -217,7 +204,7 @@
 		if (err) {
 			dev_warn(dev,
 				 "Unable to access MSR 0xEE, for Tjmax, left"
-				 " at default\n");
+				 " at default");
 		} else if (eax & 0x40000000) {
 			tjmax = tjmax_ee;
 		}
@@ -244,9 +231,6 @@
 	}
 
 	data->id = pdev->id;
-#ifdef CONFIG_SMP
-	data->core_id = c->cpu_core_id;
-#endif
 	data->name = "coretemp";
 	mutex_init(&data->update_lock);
 
@@ -344,10 +328,6 @@
 	struct list_head list;
 	struct platform_device *pdev;
 	unsigned int cpu;
-#ifdef CONFIG_SMP
-	u16 phys_proc_id;
-	u16 cpu_core_id;
-#endif
 };
 
 static LIST_HEAD(pdev_list);
@@ -358,22 +338,6 @@
 	int err;
 	struct platform_device *pdev;
 	struct pdev_entry *pdev_entry;
-#ifdef CONFIG_SMP
-	struct cpuinfo_x86 *c = &cpu_data(cpu);
-#endif
-
-	mutex_lock(&pdev_list_mutex);
-
-#ifdef CONFIG_SMP
-	/* Skip second HT entry of each core */
-	list_for_each_entry(pdev_entry, &pdev_list, list) {
-		if (c->phys_proc_id == pdev_entry->phys_proc_id &&
-		    c->cpu_core_id == pdev_entry->cpu_core_id) {
-			err = 0;	/* Not an error */
-			goto exit;
-		}
-	}
-#endif
 
 	pdev = platform_device_alloc(DRVNAME, cpu);
 	if (!pdev) {
@@ -397,10 +361,7 @@
 
 	pdev_entry->pdev = pdev;
 	pdev_entry->cpu = cpu;
-#ifdef CONFIG_SMP
-	pdev_entry->phys_proc_id = c->phys_proc_id;
-	pdev_entry->cpu_core_id = c->cpu_core_id;
-#endif
+	mutex_lock(&pdev_list_mutex);
 	list_add_tail(&pdev_entry->list, &pdev_list);
 	mutex_unlock(&pdev_list_mutex);
 
@@ -411,7 +372,6 @@
 exit_device_put:
 	platform_device_put(pdev);
 exit:
-	mutex_unlock(&pdev_list_mutex);
 	return err;
 }
 
